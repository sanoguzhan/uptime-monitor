# Generated by Django 4.0.8 on 2023-05-08 09:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('django_celery_beat', '0016_alter_crontabschedule_timezone'),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteRegistry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('url', models.URLField()),
                ('status_code', models.IntegerField(choices=[(100, 'CONTINUE'), (101, 'SWITCHING_PROTOCOLS'), (102, 'PROCESSING'), (103, 'EARLY_HINTS'), (200, 'OK'), (201, 'CREATED'), (202, 'ACCEPTED'), (203, 'NON_AUTHORITATIVE_INFORMATION'), (204, 'NO_CONTENT'), (205, 'RESET_CONTENT'), (206, 'PARTIAL_CONTENT'), (207, 'MULTI_STATUS'), (208, 'ALREADY_REPORTED'), (226, 'IM_USED'), (300, 'MULTIPLE_CHOICES'), (301, 'MOVED_PERMANENTLY'), (302, 'FOUND'), (303, 'SEE_OTHER'), (304, 'NOT_MODIFIED'), (305, 'USE_PROXY'), (307, 'TEMPORARY_REDIRECT'), (308, 'PERMANENT_REDIRECT'), (400, 'BAD_REQUEST'), (401, 'UNAUTHORIZED'), (402, 'PAYMENT_REQUIRED'), (403, 'FORBIDDEN'), (404, 'NOT_FOUND'), (405, 'METHOD_NOT_ALLOWED'), (406, 'NOT_ACCEPTABLE'), (407, 'PROXY_AUTHENTICATION_REQUIRED'), (408, 'REQUEST_TIMEOUT'), (409, 'CONFLICT'), (410, 'GONE'), (411, 'LENGTH_REQUIRED'), (412, 'PRECONDITION_FAILED'), (413, 'REQUEST_ENTITY_TOO_LARGE'), (414, 'REQUEST_URI_TOO_LONG'), (415, 'UNSUPPORTED_MEDIA_TYPE'), (416, 'REQUESTED_RANGE_NOT_SATISFIABLE'), (417, 'EXPECTATION_FAILED'), (418, 'IM_A_TEAPOT'), (421, 'MISDIRECTED_REQUEST'), (422, 'UNPROCESSABLE_ENTITY'), (423, 'LOCKED'), (424, 'FAILED_DEPENDENCY'), (425, 'TOO_EARLY'), (426, 'UPGRADE_REQUIRED'), (428, 'PRECONDITION_REQUIRED'), (429, 'TOO_MANY_REQUESTS'), (431, 'REQUEST_HEADER_FIELDS_TOO_LARGE'), (451, 'UNAVAILABLE_FOR_LEGAL_REASONS'), (500, 'INTERNAL_SERVER_ERROR'), (501, 'NOT_IMPLEMENTED'), (502, 'BAD_GATEWAY'), (503, 'SERVICE_UNAVAILABLE'), (504, 'GATEWAY_TIMEOUT'), (505, 'HTTP_VERSION_NOT_SUPPORTED'), (506, 'VARIANT_ALSO_NEGOTIATES'), (507, 'INSUFFICIENT_STORAGE'), (508, 'LOOP_DETECTED'), (510, 'NOT_EXTENDED'), (511, 'NETWORK_AUTHENTICATION_REQUIRED')], default=200)),
                ('http_method', models.CharField(choices=[('CONNECT', 'CONNECT'), ('DELETE', 'DELETE'), ('GET', 'GET'), ('HEAD', 'HEAD'), ('OPTIONS', 'OPTIONS'), ('PATCH', 'PATCH'), ('POST', 'POST'), ('PUT', 'PUT'), ('TRACE', 'TRACE')], default='GET', max_length=10)),
                ('text', models.CharField(blank=True, max_length=128, null=True)),
                ('hosted_at', models.CharField(blank=True, max_length=128, null=True)),
                ('timeout', models.IntegerField(default=5)),
                ('last_checked_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SiteResponseHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_code', models.CharField(choices=[('PASS', 'Response status is matched with the check registry status code.'), ('FAIL', 'Response status is not matched with the check registry status code.'), ('MISMATCH', 'Text is not matched.'), ('TIMEOUT', 'Request timeout.'), ('ERROR', 'Request failed with an error.')], max_length=10)),
                ('response_text', models.CharField(blank=True, max_length=256, null=True)),
                ('response_time', models.FloatField()),
                ('response_headers', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('check_registry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='core.siteregistry')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('check_registry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='core.siteregistry')),
                ('periodic_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_celery_beat.periodictask')),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_celery_beat.intervalschedule')),
            ],
        ),
        migrations.AddIndex(
            model_name='siteresponsehistory',
            index=models.Index(fields=['-created_at'], name='core_sitere_created_1090e4_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduleitem',
            index=models.Index(fields=['check_registry'], name='core_schedu_check_r_6b1d62_idx'),
        ),
    ]
